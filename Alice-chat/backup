const express = require('express')
const app = express()


//set the template engine ejs
app.set('view engine', 'ejs')

//middlewares
app.use(express.static('public'))


//routes
app.get('/', (req, res) => {
	res.render('index')
})
const Dh = require('diffie-hellman-key-exchange');
//Listen on port 3000
server = app.listen(3000)

const alice = Dh('alice', {
    prime: 'prime',
    listen: 3001,
    log_level: 'info',
    apps: {
      'bob': {
        host: '127.0.0.1',
        port: '3003'
      }
    }
  })
  


const ioConn = require("socket.io-client");
//socket.io instantiation
const io = require("socket.io")(server)
var socketSender = ioConn.connect('http://localhost:3003');

//listen on every connection
io.on('connection', (socket) => {
	console.log('New user connected')

	//default username
	socket.username = "Anonymous"

    //listen on change_username
    socket.on('change_username', (data) => {
        socket.username = data.username
    })

       //listen on new_message
       socket.on('new_message', (data) => {
        //broadcast the new message
        //io.sockets.emit('new_message', {message : data.message, username : socket.username});
        
        if (alice.getAppPublicKey('bob')) {
            const message = this.encrypt('bob', data.message)
            socketSender.emit('message_exchange', {message : message, username : socket.username})
          } else {
            alice.initalizeSession('bob', function(err, secret) {
              const message = this.encrypt('bob', data.message)
              socketSender.emit('message_exchange', {message : message, username : socket.username})
            })
          }
    })

    socket.on('message_exchange', (data) => {
        const decrypted = alice.decrypt('bob', data.message)
        io.sockets.emit('new_message', {message : decrypted, username : socket.username});
    })

    //listen on typing
    socket.on('typing', (data) => {
    	socket.broadcast.emit('typing', {username : socket.username})
    })
})
